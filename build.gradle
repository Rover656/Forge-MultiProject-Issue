buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'org.barfuin.gradle.taskinfo' version '1.3.1'
}

subprojects {
    apply plugin: 'net.minecraftforge.gradle'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    version = '1.0'
    group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
    archivesBaseName = 'modid'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
    minecraft {
        mappings channel: 'official', version: '1.18.1'

        runs {
            client {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'

                mods {
                    examplemod {
                        source sourceSets.main
                    }
                }
            }

            server {
                workingDirectory project.file('run')
                property 'forge.logging.markers', 'REGISTRIES'
                property 'forge.logging.console.level', 'debug'

                mods {
                    examplemod {
                        source sourceSets.main
                    }
                }
            }
        }
    }

    sourceSets.main.resources { srcDir 'src/generated/resources' }

    repositories {
    }

    dependencies {
        minecraft 'net.minecraftforge:forge:1.18.1-39.0.9'
    }

    jar {
        manifest {
            attributes([
                    "Specification-Title"     : "examplemod",
                    "Specification-Vendor"    : "examplemodsareus",
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "examplemodsareus",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    // The below change nothing:
// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
//jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//    publish.dependsOn('reobfJar')

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://${project.projectDir}/mcmodsrepo"
            }
        }
    }
}
